@{
    Layout = "_Layout";
    ViewData["Title"] = "Pago con MercadoPago";
}
<html>
<head>
    <script src="https://sdk.mercadopago.com/js/v2"></script>
</head>
<body>
<div class="main">
    <section class="module">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 col-sm-offset-3">
        <div id="cardPaymentBrick_container"></div>
        <script>
            const mp = new MercadoPago('TEST-2e97c0a6-3dcd-45e7-8349-213c773b0e01', {
                locale: 'es-AR'
            });
            const bricksBuilder = mp.bricks();
            const renderCardPaymentBrick = async (bricksBuilder) => {
                const settings = {
                    initialization: {
                        amount: 100, // monto a ser pago
                        payer: {
                            email: "",
                        },
                    },
                    customization: {
                        visual: {
                            style: {
                                customVariables: {
                                    theme: 'default', // | 'dark' | 'bootstrap' | 'flat'
                                }
                            }
                        },
                        paymentMethods: {
                            maxInstallments: 12,
                        }
                    },
                    callbacks: {
                        onReady: () => {
                            // callback llamado cuando Brick esté listo
                        },
                        onSubmit: (cardFormData) => {
                            //  callback llamado cuando el usuario haga clic en el botón enviar los datos
                            //  ejemplo de envío de los datos recolectados por el Brick a su servidor
                            return new Promise((resolve, reject) => {
                                fetch("/process_payment", {
                                    method: "POST",
                                    headers: {
                                        "Content-Type": "application/json",
                                    },
                                    body: JSON.stringify(cardFormData)
                                })
                                    .then((response) => {
                                        // recibir el resultado del pago
                                        resolve();
                                    })
                                    .catch((error) => {
                                        // tratar respuesta de error al intentar crear el pago
                                        reject();
                                    })
                            });
                        },
                        onError: (error) => {
                            // callback llamado para todos los casos de error de Brick
                        },
                    },
                };
                window.cardPaymentBrickController = await bricksBuilder.create('cardPayment', 'cardPaymentBrick_container', settings);
            };
            renderCardPaymentBrick(bricksBuilder);
    </script>
    </div>
  </section >
 </div >
</body>
</html>

